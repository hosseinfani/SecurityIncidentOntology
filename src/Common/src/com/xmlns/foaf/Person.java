package com.xmlns.foaf;

import ca.ryerson.rnet.ls3.annotation.OwlIri;
import ca.ryerson.rnet.ls3.annotation.OwlIriFactory;
import ca.ryerson.rnet.ls3.si.ProximityAdverb;
import com.hp.hpl.jena.rdf.model.Property;
import com.hp.hpl.jena.rdf.model.Resource;
import com.hp.hpl.jena.rdf.model.ResourceFactory;
/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Person <br>
 * @version generated on Wed Dec 10 20:15:17 EST 2014 by Hossein Fani  <https://sites.google.com/site/hosseinfani at ls3.rnet.ryerson.ca>
 */

public class Person extends Agent {

    public Person(String name, ProximityAdverb ageProximityAdverb, String gender, String wearing, String carrying) {
        super(name, ageProximityAdverb, gender);
        this.wearing = wearing;
        this.carrying = carrying;
    }
    
    /* ***************************************************
     * Property http://ls3.rnet.ryerson.ca/ontologies/sio/carrying
     */
    
    @OwlIri
    private String carrying;
    public String getCarrying(){
        return carrying;
    }

    /* ***************************************************
     * Property http://ls3.rnet.ryerson.ca/ontologies/sio/wearing
     */
    @OwlIri
    private String wearing; 
    public String getWearing(){
        return wearing;
    }
    
    @Override
    public Resource getRdfResource() throws ClassNotFoundException {
        Resource r = super.getRdfResource();
        if(carrying != null){
            Property s = ResourceFactory.createProperty(OwlIriFactory.getIri(this.getClass(), "carrying"));
            r.addLiteral(s, carrying);
        }
        if(wearing != null){
            Property s = ResourceFactory.createProperty(OwlIriFactory.getIri(this.getClass(), "wearing"));
            r.addLiteral(s, wearing);
        }
        
        return r;
    }

}
