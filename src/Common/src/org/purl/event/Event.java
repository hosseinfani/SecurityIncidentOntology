package org.purl.event;

import ca.ryerson.rnet.ls3.annotation.OwlIriFactory;
import com.hp.hpl.jena.rdf.model.Property;
import com.hp.hpl.jena.rdf.model.Resource;
import com.hp.hpl.jena.rdf.model.ResourceFactory;
import com.xmlns.foaf.Agent;
import java.util.ArrayList;
import java.util.List;
import org.w3.www.owl.Thing;
import org.w3.www.time.Instant;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Event <br>
 * @version generated on Wed Dec 10 20:15:17 EST 2014 by  Hossein Fani  <https://sites.google.com/site/hosseinfani at ls3.rnet.ryerson.ca>
 */

public abstract class Event extends Thing{
    
    public Event(Instant time){
        this.time = time;
    }
    
    private List<Thing> place = new ArrayList<>(); 
    public List<Thing> getPlace(){return place;}
    
    private List<Thing> product = new ArrayList<>(); 
    public List<Thing> getProduct(){return product;}
    
    private Instant time;
    public Instant getTime(){return time;}
    
    private List<Agent> agents = new ArrayList<>();
    public List<Agent> getAgents(){return agents;}
    
    @Override
    public Resource getRdfResource() throws ClassNotFoundException {
        Resource r = super.getRdfResource();
        for (Thing t : place) {
            r.getModel().add(t.getRdfResource().getModel());
            Property s = ResourceFactory.createProperty(OwlIriFactory.getIri(this.getClass(), "place"));
            Resource o = ResourceFactory.createResource(OwlIriFactory.getIri(t.getId()));
            r.addProperty(s, o);
        }
        for(Thing t : product){
            r.getModel().add(t.getRdfResource().getModel());
            Property s = ResourceFactory.createProperty(OwlIriFactory.getIri(this.getClass(), "product"));
            Resource o = ResourceFactory.createResource(OwlIriFactory.getIri(t.getId()));
            r.addProperty(s, o);
        }
        for(Thing t : agents){
            r.getModel().add(t.getRdfResource().getModel());
            Property s = ResourceFactory.createProperty(OwlIriFactory.getIri(this.getClass(), "agents"));
            Resource o = ResourceFactory.createResource(OwlIriFactory.getIri(t.getId()));
            r.addProperty(s, o);
        }
        if(time != null){
            r.getModel().add(time.getRdfResource().getModel());
            Property s = ResourceFactory.createProperty(OwlIriFactory.getIri(this.getClass(), "time"));
            Resource o = ResourceFactory.createResource(OwlIriFactory.getIri(time.getId()));
            r.addProperty(s, o);
        }
        
        return r;
    }
    
}
