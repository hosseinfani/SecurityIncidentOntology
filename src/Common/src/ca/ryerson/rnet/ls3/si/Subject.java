package ca.ryerson.rnet.ls3.si;

import ca.ryerson.rnet.ls3.annotation.OwlIriFactory;
import com.hp.hpl.jena.rdf.model.Property;
import com.hp.hpl.jena.rdf.model.Resource;
import com.hp.hpl.jena.rdf.model.ResourceFactory;
import com.xmlns.foaf.Person;
import java.net.URL;
import java.util.ArrayList;
import java.util.EnumSet;
import java.util.List;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Subject <br>
 * @version generated on Wed Dec 10 20:15:17 EST 2014 by Hossein Fani <https://sites.google.com/site/hosseinfani at ls3.rnet.ryerson.ca>
 */

public class Subject extends Person {

    public Subject(
            String name, 
            ProximityAdverb ageProximityAdverb, 
            String gender, 
            String wearing, 
            String carrying, 
            Double height, 
            Double weight, 
            String preState, 
            String postState,
            EnumSet<Color> hairColor) {
        super(name, ageProximityAdverb, gender, wearing, carrying);
        this.preState = preState;
        this.postState = postState;
        this.height = height;
        this.weight = weight;
        this.hairColor = hairColor;
    }
    private List<String> descriptions = new ArrayList<>();
    public List<String> getDescriptions(){
        return descriptions;
    }
    /* ***************************************************
     * Property http://ls3.rnet.ryerson.ca/ontologies/sio/hairColor
     */
    private EnumSet<Color> hairColor;

    public EnumSet<Color> getHairColor(){
        return hairColor;
    }

    /* ***************************************************
     * Property http://ls3.rnet.ryerson.ca/ontologies/sio/height
     */
    private Double height; 
    public Double getHeight(){
        return height;
    }

    /* ***************************************************
     * Property http://ls3.rnet.ryerson.ca/ontologies/sio/weight
     */
    private Double weight;
    public Double getWeight(){
        return weight;
    }

    private List<URL> imageUrls = new ArrayList<>();
    public List<URL> getImageUrls(){
        return imageUrls;
    }
    
    /* ***************************************************
     * Property http://ls3.rnet.ryerson.ca/ontologies/sio/postState
     */
    private String postState; 
    public String getPostState(){
        return postState;
    }

    /* ***************************************************
     * Property http://ls3.rnet.ryerson.ca/ontologies/sio/preState
     */
    private String preState;
    public String getPreState(){
        return preState;
    }
    
    @Override
    public Resource getRdfResource() throws ClassNotFoundException {
        Resource r = super.getRdfResource();
        for(String d : descriptions){
            Property s = ResourceFactory.createProperty(OwlIriFactory.getIri(this.getClass(), "descriptions"));
            r.addLiteral(s, d);
        }
        for(Color c : hairColor){
            Property s = ResourceFactory.createProperty(OwlIriFactory.getIri(this.getClass(), "hairColor"));
            r.addProperty(s, c.getIri());
        }
        if(height != null){
            Property s = ResourceFactory.createProperty(OwlIriFactory.getIri(this.getClass(), "height"));
            r.addLiteral(s, height);
        }
        if(weight != null){
            Property s = ResourceFactory.createProperty(OwlIriFactory.getIri(this.getClass(), "weight"));
            r.addLiteral(s, weight);
        }
        for(URL u : imageUrls){
            Property s = ResourceFactory.createProperty(OwlIriFactory.getIri(this.getClass(), "imageUrl"));
            Resource o = ResourceFactory.createResource(u.toString());
            r.addLiteral(s, o);
        }
        if(preState != null){
            Property s = ResourceFactory.createProperty(OwlIriFactory.getIri(this.getClass(), "preState"));
            r.addLiteral(s, preState);
        }
        if(postState != null){
            Property s = ResourceFactory.createProperty(OwlIriFactory.getIri(this.getClass(), "postState"));
            r.addProperty(s, postState);
        }
        
        return r;
    }
}
